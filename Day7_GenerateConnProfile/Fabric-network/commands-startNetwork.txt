/////Open a command terminal with in Fabric-network folder, let's call this terminal as host terminal

############## host terminal ##############

------------Register the ca admin for each organization—----------------

docker-compose -f docker/docker-compose-ca.yaml up -d

sudo chmod -R 777 organizations/

------------Register and enroll the users for each organization—-----------

./registerEnroll.sh

-------------Generate the genesis block—-------------------------------

export FABRIC_CFG_PATH=${PWD}

configtxgen -profile TwoOrgsOrdererGenesis -channelID system-channel -outputBlock ./channel-artifacts/genesis.block

—--------Create the channel transaction—-----------------

export CHANNEL_NAME=mychannel

configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/${CHANNEL_NAME}.tx -channelID $CHANNEL_NAME

—-------------Build the infrastructure—-----------------

docker-compose -f docker/docker-compose-2org.yaml up -d

/////Open another terminal with in Fabric-network folder, let's call this terminal as peer0_Org1 terminal.

############## peer0_Org1 terminal ##############

docker exec -it cli bash

export CHANNEL_NAME=mychannel

—-----------create channel—---------

peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./config/$CHANNEL_NAME.tx --tls --cafile $ORDERER_TLS_CA

—---------------Join peer to the channel—-------------

peer channel join -b $CHANNEL_NAME.block

peer channel list


/////Open another terminal with in Fabric-network folder, let's call this terminal as peer0_Org2 terminal.

############## peer0_Org2 terminal ##############

docker exec -it cli bash

export CHANNEL_NAME=mychannel 

export CORE_PEER_LOCALMSPID=Org2MSP 

export CORE_PEER_ADDRESS=peer0.org2.example.com:9051 

export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp

export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt 

export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key 

export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt

—---------------Join peer to the channel—-------------

peer channel join -b $CHANNEL_NAME.block

peer channel list

—-------------anchor peer update—-----------

############## host terminal ##############

configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate channel-artifacts/Org1MSPanchors.tx -channelID ${CHANNEL_NAME} -asOrg Org1MSP

configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate channel-artifacts/Org2MSPanchors.tx -channelID ${CHANNEL_NAME} -asOrg Org2MSP

############## peer0_Org1 terminal ##############

peer channel update -o orderer.example.com:7050 -c ${CHANNEL_NAME} -f ./config/Org1MSPanchors.tx --tls --cafile $ORDERER_TLS_CA

############## peer0_Org2 terminal ##############

peer channel update -o orderer.example.com:7050 -c ${CHANNEL_NAME} -f ./config/Org2MSPanchors.tx --tls --cafile $ORDERER_TLS_CA

—-----------------Chaincode lifecycle—-------------------

############## peer0_Org1 terminal ##############

peer lifecycle chaincode package fabcar.tar.gz --path /opt/gopath/src/github.com/chaincode/fabcar/javascript/ --lang node --label fabcar_1

peer lifecycle chaincode install fabcar.tar.gz

peer lifecycle chaincode queryinstalled

############## peer0_Org2 terminal ##############

peer lifecycle chaincode install fabcar.tar.gz

peer lifecycle chaincode queryinstalled

############## peer0_Org1 terminal ##############

///Execute the following command with the correct Package ID
export PACKAGE_ID=fabcar_1:c7f8e485834768e9d5a20386f5cde65cde7a48979c0806509ee66e1d155d395a

peer lifecycle chaincode approveformyorg --channelID ${CHANNEL_NAME} --name fabcar --version 1 --sequence 1  --package-id $PACKAGE_ID  --tls --cafile $ORDERER_TLS_CA  --waitForEvent

############## peer0_Org2 terminal ##############

///Execute the following command with the correct Package ID
export PACKAGE_ID=fabcar_1:c7f8e485834768e9d5a20386f5cde65cde7a48979c0806509ee66e1d155d395a

peer lifecycle chaincode approveformyorg --channelID ${CHANNEL_NAME} --name fabcar --version 1 --sequence 1  --package-id $PACKAGE_ID  --tls --cafile $ORDERER_TLS_CA  --waitForEvent

############## peer0_Org1 terminal ##############

peer lifecycle chaincode checkcommitreadiness --channelID ${CHANNEL_NAME} --name fabcar --version 1 --sequence 1 --output json

peer lifecycle chaincode commit -o orderer.example.com:7050 -C ${CHANNEL_NAME} --name fabcar --tls --cafile $ORDERER_TLS_CA  --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --version 1 --sequence 1

peer lifecycle chaincode querycommitted --channelID ${CHANNEL_NAME} --name fabcar

peer chaincode invoke -o orderer.example.com:7050  --tls --cafile $ORDERER_TLS_CA --channelID ${CHANNEL_NAME} --name fabcar --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt  --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"function":"createCar", "Args":["CAR100","Tata","Tiago","Black","Jack"]}'

peer chaincode query -o orderer.example.com:7050  --tls --cafile $ORDERER_TLS_CA --channelID ${CHANNEL_NAME} --name fabcar --peerAddresses $CORE_PEER_ADDRESS --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE -c '{"function":"queryCar", "Args":["CAR100"]}'

############## peer0_Org2 terminal ##############

peer chaincode query -o orderer.example.com:7050  --tls --cafile $ORDERER_TLS_CA --channelID ${CHANNEL_NAME} --name fabcar --peerAddresses $CORE_PEER_ADDRESS --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE -c '{"function":"queryCar", "Args":["CAR100"]}'

############## host terminal ##############

docker exec -e CORE_PEER_LOCALMSPID=Org1MSP -e CHANNEL_NAME=mychannel -e CORE_PEER_ADDRESS=peer0.org1.example.com:7051 -e CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt -e CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp -i cli peer chaincode query -o orderer.example.com:7050 -C ${CHANNEL_NAME} -n fabcar --tls --cafile $ORDERER_TLS_CA --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt -c '{"function":"queryCar", "Args":["CAR100"]}'



